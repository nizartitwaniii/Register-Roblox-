local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "GUIEditorV2"

-- Welcome Frame
local WelcomeFrame = Instance.new("Frame")
WelcomeFrame.Size = UDim2.new(0.4, 0, 0.4, 0)
WelcomeFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
WelcomeFrame.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
WelcomeFrame.BorderSizePixel = 0
WelcomeFrame.Parent = ScreenGui

local WelcomeText = Instance.new("TextLabel")
WelcomeText.Size = UDim2.new(1, 0, 0.3, 0)
WelcomeText.Position = UDim2.new(0, 0, 0, 0)
WelcomeText.Text = "GUI Editor V2\nCreated by Grok 3 (xAI)"
WelcomeText.TextColor3 = Color3.fromRGB(255, 255, 255)
WelcomeText.BackgroundTransparency = 1
WelcomeText.TextScaled = true
WelcomeText.Font = Enum.Font.SourceSansBold
WelcomeText.Parent = WelcomeFrame

local InfoText = Instance.new("TextLabel")
InfoText.Size = UDim2.new(0.9, 0, 0.4, 0)
InfoText.Position = UDim2.new(0.05, 0, 0.3, 0)
InfoText.Text = "Click 'Start Editing' to begin.\nAdd elements with Toolbox.\nEdit properties easily!"
InfoText.TextColor3 = Color3.fromRGB(255, 255, 255)
InfoText.BackgroundTransparency = 1
InfoText.TextScaled = true
InfoText.TextWrapped = true
InfoText.Parent = WelcomeFrame

local StartButton = Instance.new("TextButton")
StartButton.Size = UDim2.new(0.4, 0, 0.2, 0)
StartButton.Position = UDim2.new(0.3, 0, 0.75, 0)
StartButton.Text = "Start Editing"
StartButton.TextScaled = true
StartButton.BackgroundColor3 = Color3.fromRGB(0, 120, 180)
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.BorderSizePixel = 0
StartButton.Parent = WelcomeFrame

-- Toolbox Frame (Left Side)
local Toolbox = Instance.new("Frame")
Toolbox.Size = UDim2.new(0.2, 0, 0.9, 0)
Toolbox.Position = UDim2.new(0, 0, 0.05, 0)
Toolbox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Toolbox.BorderSizePixel = 0
Toolbox.Visible = false
Toolbox.Parent = ScreenGui

-- Toolbox Buttons
local ButtonsButton = Instance.new("TextButton")
ButtonsButton.Size = UDim2.new(0.8, 0, 0.1, 0)
ButtonsButton.Position = UDim2.new(0.1, 0, 0.1, 0)
ButtonsButton.Text = "Buttons"
ButtonsButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
ButtonsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ButtonsButton.BorderSizePixel = 0
ButtonsButton.Parent = Toolbox

local StartGuiButton = Instance.new("TextButton")
StartGuiButton.Size = UDim2.new(0.8, 0, 0.1, 0)
StartGuiButton.Position = UDim2.new(0.1, 0, 0.25, 0)
StartGuiButton.Text = "StartGui"
StartGuiButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
StartGuiButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartGuiButton.BorderSizePixel = 0
StartGuiButton.Parent = Toolbox

local BindButtonToFrame = Instance.new("TextButton")
BindButtonToFrame.Size = UDim2.new(0.8, 0, 0.1, 0)
BindButtonToFrame.Position = UDim2.new(0.1, 0, 0.4, 0)
BindButtonToFrame.Text = "Bind Button"
BindButtonToFrame.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
BindButtonToFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
BindButtonToFrame.BorderSizePixel = 0
BindButtonToFrame.Parent = Toolbox

local CopyScript = Instance.new("TextButton")
CopyScript.Size = UDim2.new(0.8, 0, 0.1, 0)
CopyScript.Position = UDim2.new(0.1, 0, 0.55, 0)
CopyScript.Text = "Copy Script"
CopyScript.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
CopyScript.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyScript.BorderSizePixel = 0
CopyScript.Parent = Toolbox

-- Properties Frame (Right Side)
local Properties = Instance.new("Frame")
Properties.Size = UDim2.new(0.25, 0, 0.9, 0)
Properties.Position = UDim2.new(0.75, 0, 0.05, 0)
Properties.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Properties.BorderSizePixel = 0
Properties.Visible = false
Properties.Parent = ScreenGui

-- Property Fields
local NameField = Instance.new("TextBox")
NameField.Size = UDim2.new(0.8, 0, 0.06, 0)
NameField.Position = UDim2.new(0.1, 0, 0.05, 0)
NameField.Text = "Name"
NameField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
NameField.TextColor3 = Color3.fromRGB(255, 255, 255)
NameField.BorderSizePixel = 0
NameField.Parent = Properties

local SizeX = Instance.new("TextBox")
SizeX.Size = UDim2.new(0.35, 0, 0.06, 0)
SizeX.Position = UDim2.new(0.1, 0, 0.13, 0)
SizeX.Text = "Size X"
SizeX.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SizeX.TextColor3 = Color3.fromRGB(255, 255, 255)
SizeX.BorderSizePixel = 0
SizeX.Parent = Properties

local SizeY = Instance.new("TextBox")
SizeY.Size = UDim2.new(0.35, 0, 0.06, 0)
SizeY.Position = UDim2.new(0.55, 0, 0.13, 0)
SizeY.Text = "Size Y"
SizeY.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SizeY.TextColor3 = Color3.fromRGB(255, 255, 255)
SizeY.BorderSizePixel = 0
SizeY.Parent = Properties

local ScaleX = Instance.new("TextBox")
ScaleX.Size = UDim2.new(0.35, 0, 0.06, 0)
ScaleX.Position = UDim2.new(0.1, 0, 0.21, 0)
ScaleX.Text = "Scale X (%)"
ScaleX.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ScaleX.TextColor3 = Color3.fromRGB(255, 255, 255)
ScaleX.BorderSizePixel = 0
ScaleX.Parent = Properties

local ScaleY = Instance.new("TextBox")
ScaleY.Size = UDim2.new(0.35, 0, 0.06, 0)
ScaleY.Position = UDim2.new(0.55, 0, 0.21, 0)
ScaleY.Text = "Scale Y (%)"
ScaleY.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ScaleY.TextColor3 = Color3.fromRGB(255, 255, 255)
ScaleY.BorderSizePixel = 0
ScaleY.Parent = Properties

local ColorR = Instance.new("TextBox")
ColorR.Size = UDim2.new(0.25, 0, 0.06, 0)
ColorR.Position = UDim2.new(0.1, 0, 0.29, 0)
ColorR.Text = "R (0-255)"
ColorR.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ColorR.TextColor3 = Color3.fromRGB(255, 255, 255)
ColorR.BorderSizePixel = 0
ColorR.Parent = Properties

local ColorG = Instance.new("TextBox")
ColorG.Size = UDim2.new(0.25, 0, 0.06, 0)
ColorG.Position = UDim2.new(0.4, 0, 0.29, 0)
ColorG.Text = "G (0-255)"
ColorG.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ColorG.TextColor3 = Color3.fromRGB(255, 255, 255)
ColorG.BorderSizePixel = 0
ColorG.Parent = Properties

local ColorB = Instance.new("TextBox")
ColorB.Size = UDim2.new(0.25, 0, 0.06, 0)
ColorB.Position = UDim2.new(0.7, 0, 0.29, 0)
ColorB.Text = "B (0-255)"
ColorB.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ColorB.TextColor3 = Color3.fromRGB(255, 255, 255)
ColorB.BorderSizePixel = 0
ColorB.Parent = Properties

local UICornerToggle = Instance.new("TextButton")
UICornerToggle.Size = UDim2.new(0.4, 0, 0.06, 0)
UICornerToggle.Position = UDim2.new(0.1, 0, 0.37, 0)
UICornerToggle.Text = "UICorner: Off"
UICornerToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
UICornerToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
UICornerToggle.BorderSizePixel = 0
UICornerToggle.Parent = Properties

local CornerRadius = Instance.new("TextBox")
CornerRadius.Size = UDim2.new(0.4, 0, 0.06, 0)
CornerRadius.Position = UDim2.new(0.55, 0, 0.37, 0)
CornerRadius.Text = "Radius (0-1)"
CornerRadius.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
CornerRadius.TextColor3 = Color3.fromRGB(255, 255, 255)
CornerRadius.BorderSizePixel = 0
CornerRadius.Parent = Properties

local UIStrokeToggle = Instance.new("TextButton")
UIStrokeToggle.Size = UDim2.new(0.4, 0, 0.06, 0)
UIStrokeToggle.Position = UDim2.new(0.1, 0, 0.45, 0)
UIStrokeToggle.Text = "UIStroke: Off"
UIStrokeToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
UIStrokeToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
UIStrokeToggle.BorderSizePixel = 0
UIStrokeToggle.Parent = Properties

local StrokeThickness = Instance.new("TextBox")
StrokeThickness.Size = UDim2.new(0.4, 0, 0.06, 0)
StrokeThickness.Position = UDim2.new(0.55, 0, 0.45, 0)
StrokeThickness.Text = "Thickness (1-10)"
StrokeThickness.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
StrokeThickness.TextColor3 = Color3.fromRGB(255, 255, 255)
StrokeThickness.BorderSizePixel = 0
StrokeThickness.Parent = Properties

local StrokeColorR = Instance.new("TextBox")
StrokeColorR.Size = UDim2.new(0.25, 0, 0.06, 0)
StrokeColorR.Position = UDim2.new(0.1, 0, 0.53, 0)
StrokeColorR.Text = "Stroke R (0-255)"
StrokeColorR.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
StrokeColorR.TextColor3 = Color3.fromRGB(255, 255, 255)
StrokeColorR.BorderSizePixel = 0
StrokeColorR.Parent = Properties

local StrokeColorG = Instance.new("TextBox")
StrokeColorG.Size = UDim2.new(0.25, 0, 0.06, 0)
StrokeColorG.Position = UDim2.new(0.4, 0, 0.53, 0)
StrokeColorG.Text = "Stroke G (0-255)"
StrokeColorG.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
StrokeColorG.TextColor3 = Color3.fromRGB(255, 255, 255)
StrokeColorG.BorderSizePixel = 0
StrokeColorG.Parent = Properties

local StrokeColorB = Instance.new("TextBox")
StrokeColorB.Size = UDim2.new(0.25, 0, 0.06, 0)
StrokeColorB.Position = UDim2.new(0.7, 0, 0.53, 0)
StrokeColorB.Text = "Stroke B (0-255)"
StrokeColorB.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
StrokeColorB.TextColor3 = Color3.fromRGB(255, 255, 255)
StrokeColorB.BorderSizePixel = 0
StrokeColorB.Parent = Properties

local ScrollingToggle = Instance.new("TextButton")
ScrollingToggle.Size = UDim2.new(0.4, 0, 0.06, 0)
ScrollingToggle.Position = UDim2.new(0.1, 0, 0.61, 0)
ScrollingToggle.Text = "Scrolling: Off"
ScrollingToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
ScrollingToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
ScrollingToggle.BorderSizePixel = 0
ScrollingToggle.Parent = Properties

local RotationField = Instance.new("TextBox")
RotationField.Size = UDim2.new(0.4, 0, 0.06, 0)
RotationField.Position = UDim2.new(0.55, 0, 0.61, 0)
RotationField.Text = "Rotation (0-360)"
RotationField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RotationField.TextColor3 = Color3.fromRGB(255, [ebp]255, 255)
RotationField.BorderSizePixel = 0
RotationField.Parent = Properties

local TextColorR = Instance.new("TextBox")
TextColorR.Size = UDim2.new(0.25, 0, 0.06, 0)
TextColorR.Position = UDim2.new(0.1, 0, 0.69, 0)
TextColorR.Text = "Text R (0-255)"
TextColorR.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
TextColorR.TextColor3 = Color3.fromRGB(255, 255, 255)
TextColorR.BorderSizePixel = 0
TextColorR.Parent = Properties

local TextColorG = Instance.new("TextBox")
TextColorG.Size = UDim2.new(0.25, 0, 0.06, 0)
TextColorG.Position = UDim2.new(0.4, 0, 0.69, 0)
TextColorG.Text = "Text G (0-255)"
TextColorG.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
TextColorG.TextColor3 = Color3.fromRGB(255, 255, 255)
TextColorG.BorderSizePixel = 0
TextColorG.Parent = Properties

local TextColorB = Instance.new("TextBox")
TextColorB.Size = UDim2.new(0.25, 0, 0.06, 0)
TextColorB.Position = UDim2.new(0.7, 0, 0.69, 0)
TextColorB.Text = "Text B (0-255)"
TextColorB.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
TextColorB.TextColor3 = Color3.fromRGB(255, 255, 255)
TextColorB.BorderSizePixel = 0
TextColorB.Parent = Properties

local TransparencyField = Instance.new("TextBox")
TransparencyField.Size = UDim2.new(0.4, 0, 0.06, 0)
TransparencyField.Position = UDim2.new(0.1, 0, 0.77, 0)
TransparencyField.Text = "Transparency (0-1)"
TransparencyField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
TransparencyField.TextColor3 = Color3.fromRGB(255, 255, 255)
TransparencyField.BorderSizePixel = 0
TransparencyField.Parent = Properties

local ZIndexField = Instance.new("TextBox")
ZIndexField.Size = UDim2.new(0.4, 0, 0.06, 0)
ZIndexField.Position = UDim2.new(0.55, 0, 0.77, 0)
ZIndexField.Text = "ZIndex"
ZIndexField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ZIndexField.TextColor3 = Color3.fromRGB(255, 255, 255)
ZIndexField.BorderSizePixel = 0
ZIndexField.Parent = Properties

local TextSizeField = Instance.new("TextBox")
TextSizeField.Size = UDim2.new(0.4, 0, 0.06, 0)
TextSizeField.Position = UDim2.new(0.1, 0, 0.85, 0)
TextSizeField.Text = "Text Size"
TextSizeField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
TextSizeField.TextColor3 = Color3.fromRGB(255, 255, 255)
TextSizeField.BorderSizePixel = 0
TextSizeField.Parent = Properties

local ImageField = Instance.new("TextBox")
ImageField.Size = UDim2.new(0.8, 0, 0.06, 0)
ImageField.Position = UDim2.new(0.1, 0, 0.93, 0)
ImageField.Text = "Image URL"
ImageField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ImageField.TextColor3 = Color3.fromRGB(255, 255, 255)
ImageField.BorderSizePixel = 0
ImageField.Visible = false
ImageField.Parent = Properties

-- Script Field for Buttons
local ScriptField = Instance.new("TextBox")
ScriptField.Size = UDim2.new(0.8, 0, 0.12, 0)
ScriptField.Position = UDim2.new(0.1, 0, 0.77, 0)
ScriptField.Text = "Enter Lua Script Here"
ScriptField.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ScriptField.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptField.BorderSizePixel = 0
ScriptField.TextWrapped = true
ScriptField.TextScaled = false
ScriptField.TextSize = 14
ScriptField.ClearTextOnFocus = true
ScriptField.Visible = false
ScriptField.Parent = Properties

-- Delete Button in Properties
local DeleteElementButton = Instance.new("TextButton")
DeleteElementButton.Size = UDim2.new(0.8, 0, 0.06, 0)
DeleteElementButton.Position = UDim2.new(0.1, 0, 0.90, 0)
DeleteElementButton.Text = "Delete Element"
DeleteElementButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
DeleteElementButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DeleteElementButton.BorderSizePixel = 0
DeleteElementButton.Parent = Properties

-- Data Management
local createdElements = {}
local buttonBindings = {}
local buttonScripts = {}
local frameChildren = {}
local selectedElement = nil
local currentPopup = nil

-- Dragging Functionality
local function makeDraggable(obj)
    local dragging = false
    local dragInput
    local dragStart
    local startPos
    local originalZIndex = obj.ZIndex
    local gridSize = 0.05
    
    obj.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = obj.Position
            obj.ZIndex = 10
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    obj.ZIndex = originalZIndex
                end
            end)
        end
    end)
    
    obj.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or 
           input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            local parentSize = obj.Parent:IsA("GuiObject") and obj.Parent.AbsoluteSize or ScreenGui.AbsoluteSize
            local newX = startPos.X.Scale + (delta.X / parentSize.X)
            local newY = startPos.Y.Scale + (delta.Y / parentSize.Y)
            newX = math.floor(newX / gridSize + 0.5) * gridSize
            newY = math.floor(newY / gridSize + 0.5) * gridSize
            newX = math.clamp(newX, 0, 1 - obj.Size.X.Scale)
            newY = math.clamp(newY, 0, 1 - obj.Size.Y.Scale)
            obj.Position = UDim2.new(newX, 0, newY, 0)
        end
    end)
end

-- Hide All Popups Except Active
local function hideAllPopupsExcept(activePopup)
    if currentPopup and currentPopup ~= activePopup then
        currentPopup:Destroy()
        currentPopup = nil
    end
end

-- Hide Frame and Its Children
local function hideFrameAndChildren(frame)
    frame.Visible = false
    if frameChildren[frame] then
        for _, childFrame in pairs(frameChildren[frame]) do
            childFrame.Visible = false
        end
    end
end

-- Select Element
local function selectElement(element)
    selectedElement = element
    Properties.Visible = true
    for _, elem in pairs(createdElements) do
        if elem ~= element then
            elem.ZIndex = math.min(elem.ZIndex, 5)
        end
    end
    element.ZIndex = 10
    
    if element:IsA("TextButton") then
        NameField.Text = element.Text
        TextColorR.Text = tostring(math.floor(element.TextColor3.R * 255))
        TextColorG.Text = tostring(math.floor(element.TextColor3.G * 255))
        TextColorB.Text = tostring(math.floor(element.TextColor3.B * 255))
        TextSizeField.Text = tostring(element.TextSize)
        ImageField.Visible = false
        ScrollingToggle.Visible = false
        ScriptField.Visible = true
        ScriptField.Text = buttonScripts[element] or "Enter Lua Script Here"
    elseif element:IsA("Frame") or element:IsA("ScrollingFrame") then
        NameField.Text = element.Name
        TextColorR.Text = "N/A"
        TextColorG.Text = "N/A"
        TextColorB.Text = "N/A"
        TextSizeField.Text = "N/A"
        ImageField.Visible = false
        ScrollingToggle.Visible = true
        ScrollingToggle.Text = element:IsA("ScrollingFrame") and "Scrolling: On" or "Scrolling: Off"
        ScriptField.Visible = false
    elseif element:IsA("TextLabel") then
        NameField.Text = element.Text
        TextColorR.Text = tostring(math.floor(element.TextColor3.R * 255))
        TextColorG.Text = tostring(math.floor(element.TextColor3.G * 255))
        TextColorB.Text = tostring(math.floor(element.TextColor3.B * 255))
        TextSizeField.Text = tostring(element.TextSize)
        ImageField.Visible = false
        ScrollingToggle.Visible = false
        ScriptField.Visible = false
    elseif element:IsA("ImageButton") then
        NameField.Text = element.Name
        TextColorR.Text = "N/A"
        TextColorG.Text = "N/A"
        TextColorB.Text = "N/A"
        TextSizeField.Text = "N/A"
        ImageField.Text = element.Image
        ImageField.Visible = true
        ScrollingToggle.Visible = false
        ScriptField.Visible = true
        ScriptField.Text = buttonScripts[element] or "Enter Lua Script Here"
    elseif element:IsA("ImageLabel") then
        NameField.Text = element.Name
        TextColorR.Text = "N/A"
        TextColorG.Text = "N/A"
        TextColorB.Text = "N/A"
        TextSizeField.Text = "N/A"
        ImageField.Text = element.Image
        ImageField.Visible = true
        ScrollingToggle.Visible = false
        ScriptField.Visible = false
    end
    SizeX.Text = tostring(element.Size.X.Scale)
    SizeY.Text = tostring(element.Size.Y.Scale)
    ScaleX.Text = tostring(math.floor(element.Size.X.Scale * 100))
    ScaleY.Text = tostring(math.floor(element.Size.Y.Scale * 100))
    ColorR.Text = tostring(math.floor(element.BackgroundColor3.R * 255))
    ColorG.Text = tostring(math.floor(element.BackgroundColor3.G * 255))
    ColorB.Text = tostring(math.floor(element.BackgroundColor3.B * 255))
    TransparencyField.Text = tostring(element.BackgroundTransparency)
    RotationField.Text = tostring(element.Rotation or 0)
    ZIndexField.Text = tostring(element.ZIndex)
    local uiCorner = element:FindFirstChild("UICorner")
    if uiCorner then
        UICornerToggle.Text = "UICorner: On"
        CornerRadius.Text = tostring(uiCorner.CornerRadius.Scale)
    else
        UICornerToggle.Text = "UICorner: Off"
        CornerRadius.Text = "0"
    end
    local uiStroke = element:FindFirstChild("UIStroke")
    if uiStroke then
        UIStrokeToggle.Text = "UIStroke: On"
        StrokeThickness.Text = tostring(uiStroke.Thickness)
        StrokeColorR.Text = tostring(math.floor(uiStroke.Color.R * 255))
        StrokeColorG.Text = tostring(math.floor(uiStroke.Color.G * 255))
        StrokeColorB.Text = tostring(math.floor(uiStroke.Color.B * 255))
    else
        UIStrokeToggle.Text = "UIStroke: Off"
        StrokeThickness.Text = "1"
        StrokeColorR.Text = "255"
        StrokeColorG.Text = "255"
        StrokeColorB.Text = "255"
    end
end

-- Parent Selection Popup
local function showParentSelectionPopup(elementType, callback)
    hideAllPopupsExcept(nil)
    local popup = Instance.new("Frame")
    popup.Size = UDim2.new(0.3, 0, 0.4, 0)
    popup.Position = UDim2.new(0.35, 0, 0.3, 0)
    popup.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    popup.BorderSizePixel = 0
    popup.Parent = ScreenGui
    currentPopup = popup

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.8, 0, 0.15, 0)
    title.Position = UDim2.new(0.1, 0, 0.05, 0)
    title.Text = "Select Parent for " .. elementType
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1
    title.TextScaled = true
    title.Parent = popup

    local parentList = Instance.new("ScrollingFrame")
    parentList.Size = UDim2.new(0.8, 0, 0.7, 0)
    parentList.Position = UDim2.new(0.1, 0, 0.25, 0)
    parentList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    parentList.BorderSizePixel = 0
    parentList.Parent = popup

    local screenGuiOption = Instance.new("TextButton")
    screenGuiOption.Size = UDim2.new(0.8, 0, 0.15, 0)
    screenGuiOption.Position = UDim2.new(0.1, 0, 0, 0)
    screenGuiOption.Text = "ScreenGui"
    screenGuiOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    screenGuiOption.TextColor3 = Color3.fromRGB(255, 255, 255)
    screenGuiOption.BorderSizePixel = 0
    screenGuiOption.Parent = parentList
    screenGuiOption.MouseButton1Click:Connect(function()
        callback(ScreenGui)
        popup:Destroy()
        currentPopup = nil
    end)

    local frames = {}
    for i, element in pairs(createdElements) do
        if element:IsA("Frame") or element:IsA("ScrollingFrame") then
            table.insert(frames, element)
            local frameOption = Instance.new("TextButton")
            frameOption.Size = UDim2.new(0.8, 0, 0.15, 0)
            frameOption.Position = UDim2.new(0.1, 0, 0.15 * i, 0)
            frameOption.Text = element.Name
            frameOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            frameOption.TextColor3 = Color3.fromRGB(255, 255, 255)
            frameOption.BorderSizePixel = 0
            frameOption.Parent = parentList
            frameOption.MouseButton1Click:Connect(function()
                callback(element)
                popup:Destroy()
                currentPopup = nil
            end)
        end
    end
    
    return popup
end

-- Buttons Popup
local function showButtonsPopup()
    if currentPopup and currentPopup.Name == "ButtonsPopup" then
        currentPopup:Destroy()
        currentPopup = nil
        return
    end
    hideAllPopupsExcept(nil)

    local popup = Instance.new("Frame")
    popup.Size = UDim2.new(0.3, 0, 0.5, 0)
    popup.Position = UDim2.new(0.35, 0, 0.25, 0)
    popup.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    popup.BorderSizePixel = 0
    popup.Name = "ButtonsPopup"
    popup.Parent = ScreenGui
    currentPopup = popup

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.8, 0, 0.15, 0)
    title.Position = UDim2.new(0.1, 0, 0.05, 0)
    title.Text = "Add Element"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1
    title.TextScaled = true
    title.Parent = popup

    local textButtonOption = Instance.new("TextButton")
    textButtonOption.Size = UDim2.new(0.8, 0, 0.15, 0)
    textButtonOption.Position = UDim2.new(0.1, 0, 0.25, 0)
    textButtonOption.Text = "TextButton"
    textButtonOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    textButtonOption.TextColor3 = Color3.fromRGB(255, 255, 255)
    textButtonOption.BorderSizePixel = 0
    textButtonOption.Parent = popup

    local imageButtonOption = Instance.new("TextButton")
    imageButtonOption.Size = UDim2.new(0.8, 0, 0.15, 0)
    imageButtonOption.Position = UDim2.new(0.1, 0, 0.42, 0)
    imageButtonOption.Text = "ImageButton"
    imageButtonOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    imageButtonOption.TextColor3 = Color3.fromRGB(255, 255, 255)
    imageButtonOption.BorderSizePixel = 0
    imageButtonOption.Parent = popup

    local textLabelOption = Instance.new("TextButton")
    textLabelOption.Size = UDim2.new(0.8, 0, 0.15, 0)
    textLabelOption.Position = UDim2.new(0.1, 0, 0.59, 0)
    textLabelOption.Text = "TextLabel"
    textLabelOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    textLabelOption.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabelOption.BorderSizePixel = 0
    textLabelOption.Parent = popup

    local imageLabelOption = Instance.new("TextButton")
    imageLabelOption.Size = UDim2.new(0.8, 0, 0.15, 0)
    imageLabelOption.Position = UDim2.new(0.1, 0, 0.76, 0)
    imageLabelOption.Text = "ImageLabel"
    imageLabelOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    imageLabelOption.TextColor3 = Color3.fromRGB(255, 255, 255)
    imageLabelOption.BorderSizePixel = 0
    imageLabelOption.Parent = popup

    textButtonOption.MouseButton1Click:Connect(function()
        local parentPopup = showParentSelectionPopup("TextButton", function(parent)
            local newButton = Instance.new("TextButton")
            newButton.Size = UDim2.new(0.3, 0, 0.15, 0)
            newButton.Position = UDim2.new(0.2, 0, 0.3, 0)
            newButton.Text = "New Button"
            newButton.ZIndex = 2
            newButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            newButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            newButton.TextSize = 14
            newButton.Parent = parent
            table.insert(createdElements, newButton)
            makeDraggable(newButton)
            
            newButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                   input.UserInputType == Enum.UserInputType.Touch then
                    selectElement(newButton)
                end
            end)
            
            newButton.MouseButton1Click:Connect(function()
                local scriptCode = buttonScripts[newButton]
                if scriptCode and scriptCode ~= "Enter Lua Script Here" and scriptCode ~= "" then
                    local func, err = loadstring(scriptCode)
                    if func then
                        pcall(func)
                    else
                        warn("Error in script: " .. err)
                    end
                end
            end)
        end)
        popup:Destroy()
        currentPopup = parentPopup
    end)

    imageButtonOption.MouseButton1Click:Connect(function()
        local parentPopup = showParentSelectionPopup("ImageButton", function(parent)
            local newImageButton = Instance.new("ImageButton")
            newImageButton.Size = UDim2.new(0.4, 0, 0.4, 0)
            newImageButton.Position = UDim2.new(0.2, 0, 0.3, 0)
            newImageButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            newImageButton.Image = "rbxassetid://123456"
            newImageButton.ZIndex = 2
            newImageButton.Parent = parent
            table.insert(createdElements, newImageButton)
            makeDraggable(newImageButton)
            
            newImageButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                   input.UserInputType == Enum.UserInputType.Touch then
                    selectElement(newImageButton)
                end
            end)
            
            newImageButton.MouseButton1Click:Connect(function()
                local scriptCode = buttonScripts[newImageButton]
                if scriptCode and scriptCode ~= "Enter Lua Script Here" and scriptCode ~= "" then
                    local func, err = loadstring(scriptCode)
                    if func then
                        pcall(func)
                    else
                        warn("Error in script: " .. err)
                    end
                end
            end)
        end)
        popup:Destroy()
        currentPopup = parentPopup
    end)

    textLabelOption.MouseButton1Click:Connect(function()
        local parentPopup = showParentSelectionPopup("TextLabel", function(parent)
            local newTextLabel = Instance.new("TextLabel")
            newTextLabel.Size = UDim2.new(0.4, 0, 0.2, 0)
            newTextLabel.Position = UDim2.new(0.2, 0, 0.3, 0)
            newTextLabel.Text = "New TextLabel"
            newTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            newTextLabel.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            newTextLabel.TextSize = 18
            newTextLabel.ZIndex = 2
            newTextLabel.Parent = parent
            table.insert(createdElements, newTextLabel)
            makeDraggable(newTextLabel)
            
            newTextLabel.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                   input.UserInputType == Enum.UserInputType.Touch then
                    selectElement(newTextLabel)
                end
            end)
            if parent:IsA("Frame") or parent:IsA("ScrollingFrame") then
                parent.Active = false
            end
        end)
        popup:Destroy()
        currentPopup = parentPopup
    end)

    imageLabelOption.MouseButton1Click:Connect(function()
        local parentPopup = showParentSelectionPopup("ImageLabel", function(parent)
            local newImageLabel = Instance.new("ImageLabel")
            newImageLabel.Size = UDim2.new(0.4, 0, 0.4, 0)
            newImageLabel.Position = UDim2.new(0.2, 0, 0.3, 0)
            newImageLabel.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            newImageLabel.Image = "rbxassetid://123456"
            newImageLabel.ZIndex = 2
            newImageLabel.Parent = parent
            table.insert(createdElements, newImageLabel)
            makeDraggable(newImageLabel)
            
            newImageLabel.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                   input.UserInputType == Enum.UserInputType.Touch then
                    selectElement(newImageLabel)
                end
            end)
        end)
        popup:Destroy()
        currentPopup = parentPopup
    end)
end

-- StartGui Popup
local function showStartGuiPopup()
    if currentPopup and currentPopup.Name == "StartGuiPopup" then
        currentPopup:Destroy()
        currentPopup = nil
        return
    end
    hideAllPopupsExcept(nil)

    local popup = Instance.new("Frame")
    popup.Size = UDim2.new(0.3, 0, 0.3, 0)
    popup.Position = UDim2.new(0.35, 0, 0.35, 0)
    popup.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    popup.BorderSizePixel = 0
    popup.Name = "StartGuiPopup"
    popup.Parent = ScreenGui
    currentPopup = popup

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.8, 0, 0.2, 0)
    title.Position = UDim2.new(0.1, 0, 0.1, 0)
    title.Text = "Select Parent:"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1
    title.TextScaled = true
    title.Parent = popup

    local screenGuiOption = Instance.new("TextButton")
    screenGuiOption.Size = UDim2.new(0.8, 0, 0.2, 0)
    screenGuiOption.Position = UDim2.new(0.1, 0, 0.4, 0)
    screenGuiOption.Text = "ScreenGui"
    screenGuiOption.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    screenGuiOption.TextColor3 = Color3.fromRGB(255, 255, 255)
    screenGuiOption.BorderSizePixel = 0
    screenGuiOption.Parent = popup

    local coreGuiLabel = Instance.new("TextLabel")
    coreGuiLabel.Size = UDim2.new(0.8, 0, 0.2, 0)
    coreGuiLabel.Position = UDim2.new(0.1, 0, 0.7, 0)
    coreGuiLabel.Text = "CoreGui <Coming>"
    coreGuiLabel.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    coreGuiLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    coreGuiLabel.BorderSizePixel = 0
    coreGuiLabel.Parent = popup

    screenGuiOption.MouseButton1Click:Connect(function()
        local newFrame = Instance.new("Frame")
        newFrame.Size = UDim2.new(0.6, 0, 0.6, 0)
        newFrame.Position = UDim2.new(0.2, 0, 0.3, 0)
        newFrame.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
        newFrame.ZIndex = 1
        newFrame.Parent = ScreenGui
        table.insert(createdElements, newFrame)
        makeDraggable(newFrame)
        
        newFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or 
               input.UserInputType == Enum.UserInputType.Touch then
                selectElement(newFrame)
            end
        end)
        popup:Destroy()
        currentPopup = nil
    end)
end

-- Bind Button to Frame Popup
local function showBindButtonToFramePopup(button)
    if currentPopup and currentPopup.Name == "BindPopup" then
        currentPopup:Destroy()
        currentPopup = nil
        return
    end
    hideAllPopupsExcept(nil)

    local popup = Instance.new("Frame")
    popup.Size = UDim2.new(0.3, 0, 0.3, 0)
    popup.Position = UDim2.new(0.35, 0, 0.35, 0)
    popup.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    popup.BorderSizePixel = 0
    popup.Name = "BindPopup"
    popup.Parent = ScreenGui
    currentPopup = popup

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.8, 0, 0.2, 0)
    label.Position = UDim2.new(0.1, 0, 0.1, 0)
    label.Text = "Select Frame to Bind:"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.Parent = popup

    local framesList = Instance.new("ScrollingFrame")
    framesList.Size = UDim2.new(0.8, 0, 0.6, 0)
    framesList.Position = UDim2.new(0.1, 0, 0.3, 0)
    framesList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    framesList.BorderSizePixel = 0
    framesList.Parent = popup

    local frames = {}
    for _, element in pairs(createdElements) do
        if element:IsA("Frame") or element:IsA("ScrollingFrame") then
            table.insert(frames, element)
        end
    end

    for i, frame in pairs(frames) do
        local frameButton = Instance.new("TextButton")
        frameButton.Size = UDim2.new(0.8, 0, 0.1, 0)
        frameButton.Position = UDim2.new(0.1, 0, 0.1 * (i - 1), 0)
        frameButton.Text = frame.Name
        frameButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
        frameButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        frameButton.BorderSizePixel = 0
        frameButton.Parent = framesList

        frameButton.MouseButton1Click:Connect(function()
            for _, connection in pairs(getconnections(button.MouseButton1Click)) do
                connection:Disconnect()
            end
            buttonBindings[button] = frame
            frame.Visible = false

            local parentFrame = button.Parent
            while parentFrame and not (parentFrame:IsA("Frame") or parentFrame:IsA("ScrollingFrame")) do
                parentFrame = parentFrame.Parent
            end
            if parentFrame and (parentFrame:IsA("Frame") or parentFrame:IsA("ScrollingFrame")) then
                if not frameChildren[parentFrame] then
                    frameChildren[parentFrame] = {}
                end
                table.insert(frameChildren[parentFrame], frame)
            end

            button.MouseButton1Click:Connect(function()
                if frame.Visible then
                    hideFrameAndChildren(frame)
                else
                    frame.Visible = true
                end
                local scriptCode = buttonScripts[button]
                if scriptCode and scriptCode ~= "Enter Lua Script Here" and scriptCode ~= "" then
                    local func, err = loadstring(scriptCode)
                    if func then
                        pcall(func)
                    else
                        warn("Error in script: " .. err)
                    end
                end
            end)
            popup:Destroy()
            currentPopup = nil
        end)
    end
end

-- Toolbox Button Connections
ButtonsButton.MouseButton1Click:Connect(showButtonsPopup)
StartGuiButton.MouseButton1Click:Connect(showStartGuiPopup)
BindButtonToFrame.MouseButton1Click:Connect(function()
    if selectedElement and selectedElement:IsA("TextButton") then
        showBindButtonToFramePopup(selectedElement)
    else
        warn("Please select a button first!")
    end
end)

-- Delete Element Functionality
DeleteElementButton.MouseButton1Click:Connect(function()
    if selectedElement then
        local index = table.find(createdElements, selectedElement)
        if index then
            table.remove(createdElements, index)
            if buttonBindings[selectedElement] then
                buttonBindings[selectedElement] = nil
            end
            if buttonScripts[selectedElement] then
                buttonScripts[selectedElement] = nil
            end
            if frameChildren[selectedElement] then
                frameChildren[selectedElement] = nil
            end
            for _, frames in pairs(frameChildren) do
                local childIndex = table.find(frames, selectedElement)
                if childIndex then
                    table.remove(frames, childIndex)
                end
            end
            selectedElement:Destroy()
            selectedElement = nil
            Properties.Visible = false
        end
    end
end)

-- Property Updates
NameField.FocusLost:Connect(function()
    if selectedElement then
        if selectedElement:IsA("TextButton") or selectedElement:IsA("TextLabel") then
            selectedElement.Text = NameField.Text
        else
            selectedElement.Name = NameField.Text
        end
    end
end)

SizeX.FocusLost:Connect(function()
    if selectedElement then
        local newX = tonumber(SizeX.Text) or selectedElement.Size.X.Scale
        selectedElement.Size = UDim2.new(newX, 0, selectedElement.Size.Y.Scale, 0)
        ScaleX.Text = tostring(math.floor(newX * 100))
    end
end)

SizeY.FocusLost:Connect(function()
    if selectedElement then
        local newY = tonumber(SizeY.Text) or selectedElement.Size.Y.Scale
        selectedElement.Size = UDim2.new(selectedElement.Size.X.Scale, 0, newY, 0)
        ScaleY.Text = tostring(math.floor(newY * 100))
    end
end)

ScaleX.FocusLost:Connect(function()
    if selectedElement then
        local newScaleX = tonumber(ScaleX.Text) or (selectedElement.Size.X.Scale * 100)
        newScaleX = math.clamp(newScaleX, 0, 1000) / 100
        selectedElement.Size = UDim2.new(newScaleX, 0, selectedElement.Size.Y.Scale, 0)
        SizeX.Text = tostring(newScaleX)
    end
end)

ScaleY.FocusLost:Connect(function()
    if selectedElement then
        local newScaleY = tonumber(ScaleY.Text) or (selectedElement.Size.Y.Scale * 100)
        newScaleY = math.clamp(newScaleY, 0, 1000) / 100
        selectedElement.Size = UDim2.new(selectedElement.Size.X.Scale, 0, newScaleY, 0)
        SizeY.Text = tostring(newScaleY)
    end
end)

ColorR.FocusLost:Connect(function()
    if selectedElement then
        local r = tonumber(ColorR.Text) or (selectedElement.BackgroundColor3.R * 255)
        local g = tonumber(ColorG.Text) or (selectedElement.BackgroundColor3.G * 255)
        local b = tonumber(ColorB.Text) or (selectedElement.BackgroundColor3.B * 255)
        r = math.clamp(r, 0, 255)
        selectedElement.BackgroundColor3 = Color3.fromRGB(r, g, b)
    end
end)

ColorG.FocusLost:Connect(function()
    if selectedElement then
        local r = tonumber(ColorR.Text) or (selectedElement.BackgroundColor3.R * 255)
        local g = tonumber(ColorG.Text) or (selectedElement.BackgroundColor3.G * 255)
        local b = tonumber(ColorB.Text) or (selectedElement.BackgroundColor3.B * 255)
        g = math.clamp(g, 0, 255)
        selectedElement.BackgroundColor3 = Color3.fromRGB(r, g, b)
    end
end)

ColorB.FocusLost:Connect(function()
    if selectedElement then
        local r = tonumber(ColorR.Text) or (selectedElement.BackgroundColor3.R * 255)
        local g = tonumber(ColorG.Text) or (selectedElement.BackgroundColor3.G * 255)
        local b = tonumber(ColorB.Text) or (selectedElement.BackgroundColor3.B * 255)
        b = math.clamp(b, 0, 255)
        selectedElement.BackgroundColor3 = Color3.fromRGB(r, g, b)
    end
end)

TextColorR.FocusLost:Connect(function()
    if selectedElement and (selectedElement:IsA("TextButton") or selectedElement:IsA("TextLabel")) then
        local r = tonumber(TextColorR.Text) or (selectedElement.TextColor3.R * 255)
        local g = tonumber(TextColorG.Text) or (selectedElement.TextColor3.G * 255)
        local b = tonumber(TextColorB.Text) or (selectedElement.TextColor3.B * 255)
        r = math.clamp(r, 0, 255)
        selectedElement.TextColor3 = Color3.fromRGB(r, g, b)
    end
end)

TextColorG.FocusLost:Connect(function()
    if selectedElement and (selectedElement:IsA("TextButton") or selectedElement:IsA("TextLabel")) then
        local r = tonumber(TextColorR.Text) or (selectedElement.TextColor3.R * 255)
        local g = tonumber(TextColorG.Text) or (selectedElement.TextColor3.G * 255)
        local b = tonumber(TextColorB.Text) or (selectedElement.TextColor3.B * 255)
        g = math.clamp(g, 0, 255)
        selectedElement.TextColor3 = Color3.fromRGB(r, g, b)
    end
end)

TextColorB.FocusLost:Connect(function()
    if selectedElement and (selectedElement:IsA("TextButton") or selectedElement:IsA("TextLabel")) then
        local r = tonumber(TextColorR.Text) or (selectedElement.TextColor3.R * 255)
        local g = tonumber(TextColorG.Text) or (selectedElement.TextColor3.G * 255)
        local b = tonumber(TextColorB.Text) or (selectedElement.TextColor3.B * 255)
        b = math.clamp(b, 0, 255)
        selectedElement.TextColor3 = Color3.fromRGB(r, g, b)
    end
end)

TransparencyField.FocusLost:Connect(function()
    if selectedElement then
        local transparency = tonumber(TransparencyField.Text) or selectedElement.BackgroundTransparency
        transparency = math.clamp(transparency, 0, 1)
        selectedElement.BackgroundTransparency = transparency
    end
end)

ZIndexField.FocusLost:Connect(function()
    if selectedElement then
        local zIndex = tonumber(ZIndexField.Text) or selectedElement.ZIndex
        zIndex = math.clamp(zIndex, -100, 100)
        selectedElement.ZIndex = zIndex
    end
end)

TextSizeField.FocusLost:Connect(function()
    if selectedElement and (selectedElement:IsA("TextButton") or selectedElement:IsA("TextLabel")) then
        local textSize = tonumber(TextSizeField.Text) or selectedElement.TextSize
        textSize = math.clamp(textSize, 1, 100)
        selectedElement.TextSize = textSize
        selectedElement.TextScaled = false
    end
end)

UICornerToggle.MouseButton1Click:Connect(function()
    if selectedElement then
        local uiCorner = selectedElement:FindFirstChild("UICorner")
        if uiCorner then
            uiCorner:Destroy()
            UICornerToggle.Text = "UICorner: Off"
            CornerRadius.Text = "0"
        else
            uiCorner = Instance.new("UICorner")
            uiCorner.CornerRadius = UDim.new(0.1, 0)
            uiCorner.Parent = selectedElement
            UICornerToggle.Text = "UICorner: On"
            CornerRadius.Text = "0.1"
        end
    end
end)

CornerRadius.FocusLost:Connect(function()
    if selectedElement then
        local uiCorner = selectedElement:FindFirstChild("UICorner")
        if uiCorner then
            local radius = tonumber(CornerRadius.Text) or uiCorner.CornerRadius.Scale
            radius = math.clamp(radius, 0, 1)
            uiCorner.CornerRadius = UDim.new(radius, 0)
            UICornerToggle.Text = "UICorner: On"
        end
    end
end)

UIStrokeToggle.MouseButton1Click:Connect(function()
    if selectedElement then
        local uiStroke = selectedElement:FindFirstChild("UIStroke")
        if uiStroke then
            uiStroke:Destroy()
            UIStrokeToggle.Text = "UIStroke: Off"
            StrokeThickness.Text = "1"
            StrokeColorR.Text = "255"
            StrokeColorG.Text = "255"
            StrokeColorB.Text = "255"
        else
            uiStroke = Instance.new("UIStroke")
            uiStroke.Thickness = 1
            uiStroke.Color = Color3.fromRGB(255, 255, 255)
            uiStroke.Parent = selectedElement
            UIStrokeToggle.Text = "UIStroke: On"
            StrokeThickness.Text = "1"
            StrokeColorR.Text = "255"
            StrokeColorG.Text = "255"
            StrokeColorB.Text = "255"
        end
    end
end)

StrokeThickness.FocusLost:Connect(function()
    if selectedElement then
        local uiStroke = selectedElement:FindFirstChild("UIStroke")
        if uiStroke then
            local thickness = tonumber(StrokeThickness.Text) or uiStroke.Thickness
            thickness = math.clamp(thickness, 1, 10)
            uiStroke.Thickness = thickness
            UIStrokeToggle.Text = "UIStroke: On"
        end
    end
end)

StrokeColorR.FocusLost:Connect(function()
    if selectedElement then
        local uiStroke = selectedElement:FindFirstChild("UIStroke")
        if uiStroke then
            local r = tonumber(StrokeColorR.Text) or (uiStroke.Color.R * 255)
            local g = tonumber(StrokeColorG.Text) or (uiStroke.Color.G * 255)
            local b = tonumber(StrokeColorB.Text) or (uiStroke.Color.B * 255)
            r = math.clamp(r, 0, 255)
            uiStroke.Color = Color3.fromRGB(r, g, b)
            UIStrokeToggle.Text = "UIStroke: On"
        end
    end
end)

StrokeColorG.FocusLost:Connect(function()
    if selectedElement then
        local uiStroke = selectedElement:FindFirstChild("UIStroke")
        if uiStroke then
            local r = tonumber(StrokeColorR.Text) or (uiStroke.Color.R * 255)
            local g = tonumber(StrokeColorG.Text) or (uiStroke.Color.G * 255)
            local b = tonumber(StrokeColorB.Text) or (uiStroke.Color.B * 255)
            g = math.clamp(g, 0, 255)
            uiStroke.Color = Color3.fromRGB(r, g, b)
            UIStrokeToggle.Text = "UIStroke: On"
        end
    end
end)

StrokeColorB.FocusLost:Connect(function()
    if selectedElement then
        local uiStroke = selectedElement:FindFirstChild("UIStroke")
        if uiStroke then
            local r = tonumber(StrokeColorR.Text) or (uiStroke.Color.R * 255)
            local g = tonumber(StrokeColorG.Text) or (uiStroke.Color.G * 255)
            local b = tonumber(StrokeColorB.Text) or (uiStroke.Color.B * 255)
            b = math.clamp(b, 0, 255)
            uiStroke.Color = Color3.fromRGB(r, g, b)
            UIStrokeToggle.Text = "UIStroke: On"
        end
    end
end)

RotationField.FocusLost:Connect(function()
    if selectedElement then
        local rotation = tonumber(RotationField.Text) or (selectedElement.Rotation or 0)
        rotation = math.clamp(rotation, 0, 360)
        selectedElement.Rotation = rotation
    end
end)

ImageField.FocusLost:Connect(function()
    if selectedElement and (selectedElement:IsA("ImageButton") or selectedElement:IsA("ImageLabel")) then
        local newImage = ImageField.Text
        if newImage and newImage ~= "" then
            pcall(function()
                selectedElement.Image = newImage
            end)
        end
    end
end)

ScriptField.FocusLost:Connect(function()
    if selectedElement and (selectedElement:IsA("TextButton") or selectedElement:IsA("ImageButton")) then
        buttonScripts[selectedElement] = ScriptField.Text
    end
end)

-- Welcome Screen Logic
StartButton.MouseButton1Click:Connect(function()
    WelcomeFrame.Visible = false
    Toolbox.Visible = true
end)

-- Copy Script Functionality
CopyScript.MouseButton1Click:Connect(function()
    local scriptOutput = "-- GUI Created with Grok 3 Editor V2\n"
    scriptOutput = scriptOutput .. "local ScreenGui = Instance.new('ScreenGui')\n"
    scriptOutput = scriptOutput .. "ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui\n\n"
    
    local elementNames = {}
    local elementCounter = 1

    local function generateElementCode(element, parentVarName)
        local varName = "Element" .. elementCounter
        elementNames[element] = varName
        elementCounter = elementCounter + 1
        
        local posXScale = element.Position.X.Scale
        local posXOffset = element.Position.X.Offset
        local posYScale = element.Position.Y.Scale
        local posYOffset = element.Position.Y.Offset
        
        if element:IsA("TextButton") then
            scriptOutput = scriptOutput .. string.format(
                "local %s = Instance.new('TextButton')\n%s.Size = UDim2.new(%f, %d, %f, %d)\n%s.Position = UDim2.new(%f, %d, %f, %d)\n%s.Rotation = %f\n%s.Text = '%s'\n%s.BackgroundColor3 = Color3.fromRGB(%d, %d, %d)\n%s.TextColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundTransparency = %f\n%s.TextSize = %d\n%s.TextScaled = false\n%s.ZIndex = %d\n",
                varName, varName,
                element.Size.X.Scale, element.Size.X.Offset,
                element.Size.Y.Scale, element.Size.Y.Offset,
                varName, posXScale, posXOffset, posYScale, posYOffset,
                varName, element.Rotation or 0,
                varName, element.Text,
                varName, math.floor(element.BackgroundColor3.R * 255), math.floor(element.BackgroundColor3.G * 255), math.floor(element.BackgroundColor3.B * 255),
                varName, math.floor(element.TextColor3.R * 255), math.floor(element.TextColor3.G * 255), math.floor(element.TextColor3.B * 255),
                varName, element.BackgroundTransparency,
                varName, element.TextSize,
                varName, varName, element.ZIndex
            )
            local uiCorner = element:FindFirstChild("UICorner")
            if uiCorner then
                scriptOutput = scriptOutput .. string.format(
                    "local UICorner = Instance.new('UICorner')\nUICorner.CornerRadius = UDim.new(%f, 0)\nUICorner.Parent = %s\n",
                    uiCorner.CornerRadius.Scale, varName
                )
            end
            local uiStroke = element:FindFirstChild("UIStroke")
            if uiStroke then
                scriptOutput = scriptOutput .. string.format(
                    "local UIStroke = Instance.new('UIStroke')\nUIStroke.Thickness = %d\nUIStroke.Color = Color3.fromRGB(%d, %d, %d)\nUIStroke.Parent = %s\n",
                    uiStroke.Thickness, math.floor(uiStroke.Color.R * 255), math.floor(uiStroke.Color.G * 255), math.floor(uiStroke.Color.B * 255), varName
                )
            end
            scriptOutput = scriptOutput .. string.format("%s.Parent = %s\n\n", varName, parentVarName)
        elseif element:IsA("Frame") then
            scriptOutput = scriptOutput .. string.format(
                "local %s = Instance.new('Frame')\n%s.Size = UDim2.new(%f, %d, %f, %d)\n%s.Position = UDim2.new(%f, %d, %f, %d)\n%s.Rotation = %f\n%s.BackgroundColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundTransparency = %f\n%s.ZIndex = %d\n%s.Visible = false\n",
                varName, varName,
                element.Size.X.Scale, element.Size.X.Offset,
                element.Size.Y.Scale, element.Size.Y.Offset,
                varName, posXScale, posXOffset, posYScale, posYOffset,
                varName, element.Rotation or 0,
                varName, math.floor(element.BackgroundColor3.R * 255), math.floor(element.BackgroundColor3.G * 255), math.floor(element.BackgroundColor3.B * 255),
                varName, element.BackgroundTransparency,
                varName, element.ZIndex,
                varName
            )
            local uiCorner = element:FindFirstChild("UICorner")
            if uiCorner then
                scriptOutput = scriptOutput .. string.format(
                    "local UICorner = Instance.new('UICorner')\nUICorner.CornerRadius = UDim.new(%f, 0)\nUICorner.Parent = %s\n",
                    uiCorner.CornerRadius.Scale, varName
                )
            end
            local uiStroke = element:FindFirstChild("UIStroke")
            if uiStroke then
                scriptOutput = scriptOutput .. string.format(
                    "local UIStroke = Instance.new('UIStroke')\nUIStroke.Thickness = %d\nUIStroke.Color = Color3.fromRGB(%d, %d, %d)\nUIStroke.Parent = %s\n",
                    uiStroke.Thickness, math.floor(uiStroke.Color.R * 255), math.floor(uiStroke.Color.G * 255), math.floor(uiStroke.Color.B * 255), varName
                )
            end
            scriptOutput = scriptOutput .. string.format("%s.Parent = %s\n", varName, parentVarName)
            for _, child in pairs(element:GetChildren()) do
                if child:IsA("TextButton") or child:IsA("ImageButton") or 
                   child:IsA("TextLabel") or child:IsA("ImageLabel") then
                    generateElementCode(child, varName)
                end
            end
            scriptOutput = scriptOutput .. "\n"
        elseif element:IsA("ScrollingFrame") then
            scriptOutput = scriptOutput .. string.format(
                "local %s = Instance.new('ScrollingFrame')\n%s.Size = UDim2.new(%f, %d, %f, %d)\n%s.Position = UDim2.new(%f, %d, %f, %d)\n%s.Rotation = %f\n%s.BackgroundColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundTransparency = %f\n%s.ZIndex = %d\n%s.ScrollBarThickness = %d\n%s.ScrollingDirection = Enum.ScrollingDirection.Y\n%s.CanvasSize = UDim2.new(0, 0, 2, 0)\n%s.Visible = false\n",
                varName, varName,
                element.Size.X.Scale, element.Size.X.Offset,
                element.Size.Y.Scale, element.Size.Y.Offset,
                varName, posXScale, posXOffset, posYScale, posYOffset,
                varName, element.Rotation or 0,
                varName, math.floor(element.BackgroundColor3.R * 255), math.floor(element.BackgroundColor3.G * 255), math.floor(element.BackgroundColor3.B * 255),
                varName, element.BackgroundTransparency,
                varName, element.ZIndex,
                varName, element.ScrollBarThickness,
                varName, varName,
                varName
            )
            local uiCorner = element:FindFirstChild("UICorner")
            if uiCorner then
                scriptOutput = scriptOutput .. string.format(
                    "local UICorner = Instance.new('UICorner')\nUICorner.CornerRadius = UDim.new(%f, 0)\nUICorner.Parent = %s\n",
                    uiCorner.CornerRadius.Scale, varName
                )
            end
            local uiStroke = element:FindFirstChild("UIStroke")
            if uiStroke then
                scriptOutput = scriptOutput .. string.format(
                    "local UIStroke = Instance.new('UIStroke')\nUIStroke.Thickness = %d\nUIStroke.Color = Color3.fromRGB(%d, %d, %d)\nUIStroke.Parent = %s\n",
                    uiStroke.Thickness, math.floor(uiStroke.Color.R * 255), math.floor(uiStroke.Color.G * 255), math.floor(uiStroke.Color.B * 255), varName
                )
            end
            scriptOutput = scriptOutput .. string.format("%s.Parent = %s\n", varName, parentVarName)
            for _, child in pairs(element:GetChildren()) do
                if child:IsA("TextButton") or child:IsA("ImageButton") or 
                   child:IsA("TextLabel") or child:IsA("ImageLabel") then
                    generateElementCode(child, varName)
                end
            end
            scriptOutput = scriptOutput .. "\n"
        elseif element:IsA("TextLabel") then
            scriptOutput = scriptOutput .. string.format(
                "local %s = Instance.new('TextLabel')\n%s.Size = UDim2.new(%f, %d, %f, %d)\n%s.Position = UDim2.new(%f, %d, %f, %d)\n%s.Rotation = %f\n%s.Text = '%s'\n%s.TextColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundTransparency = %f\n%s.TextSize = %d\n%s.TextScaled = false\n%s.ZIndex = %d\n",
                varName, varName,
                element.Size.X.Scale, element.Size.X.Offset,
                element.Size.Y.Scale, element.Size.Y.Offset,
                varName, posXScale, posXOffset, posYScale, posYOffset,
                varName, element.Rotation or 0,
                varName, element.Text,
                varName, math.floor(element.TextColor3.R * 255), math.floor(element.TextColor3.G * 255), math.floor(element.TextColor3.B * 255),
                varName, math.floor(element.BackgroundColor3.R * 255), math.floor(element.BackgroundColor3.G * 255), math.floor(element.BackgroundColor3.B * 255),
                varName, element.BackgroundTransparency,
                varName, element.TextSize,
                varName, varName, element.ZIndex
            )
            local uiCorner = element:FindFirstChild("UICorner")
            if uiCorner then
                scriptOutput = scriptOutput .. string.format(
                    "local UICorner = Instance.new('UICorner')\nUICorner.CornerRadius = UDim.new(%f, 0)\nUICorner.Parent = %s\n",
                    uiCorner.CornerRadius.Scale, varName
                )
            end
            local uiStroke = element:FindFirstChild("UIStroke")
            if uiStroke then
                scriptOutput = scriptOutput .. string.format(
                    "local UIStroke = Instance.new('UIStroke')\nUIStroke.Thickness = %d\nUIStroke.Color = Color3.fromRGB(%d, %d, %d)\nUIStroke.Parent = %s\n",
                    uiStroke.Thickness, math.floor(uiStroke.Color.R * 255), math.floor(uiStroke.Color.G * 255), math.floor(uiStroke.Color.B * 255), varName
                )
            end
            scriptOutput = scriptOutput .. string.format("%s.Parent = %s\n\n", varName, parentVarName)
        elseif element:IsA("ImageButton") then
            scriptOutput = scriptOutput .. string.format(
                "local %s = Instance.new('ImageButton')\n%s.Size = UDim2.new(%f, %d, %f, %d)\n%s.Position = UDim2.new(%f, %d, %f, %d)\n%s.Rotation = %f\n%s.Image = '%s'\n%s.BackgroundColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundTransparency = %f\n%s.ZIndex = %d\n",
                varName, varName,
                element.Size.X.Scale, element.Size.X.Offset,
                element.Size.Y.Scale, element.Size.Y.Offset,
                varName, posXScale, posXOffset, posYScale, posYOffset,
                varName, element.Rotation or 0,
                varName, element.Image,
                varName, math.floor(element.BackgroundColor3.R * 255), math.floor(element.BackgroundColor3.G * 255), math.floor(element.BackgroundColor3.B * 255),
                varName, element.BackgroundTransparency,
                varName, element.ZIndex
            )
            local uiCorner = element:FindFirstChild("UICorner")
            if uiCorner then
                scriptOutput = scriptOutput .. string.format(
                    "local UICorner = Instance.new('UICorner')\nUICorner.CornerRadius = UDim.new(%f, 0)\nUICorner.Parent = %s\n",
                    uiCorner.CornerRadius.Scale, varName
                )
            end
            local uiStroke = element:FindFirstChild("UIStroke")
            if uiStroke then
                scriptOutput = scriptOutput .. string.format(
                    "local UIStroke = Instance.new('UIStroke')\nUIStroke.Thickness = %d\nUIStroke.Color = Color3.fromRGB(%d, %d, %d)\nUIStroke.Parent = %s\n",
                    uiStroke.Thickness, math.floor(uiStroke.Color.R * 255), math.floor(uiStroke.Color.G * 255), math.floor(uiStroke.Color.B * 255), varName
                )
            end
            scriptOutput = scriptOutput .. string.format("%s.Parent = %s\n\n", varName, parentVarName)
        elseif element:IsA("ImageLabel") then
            scriptOutput = scriptOutput .. string.format(
                "local %s = Instance.new('ImageLabel')\n%s.Size = UDim2.new(%f, %d, %f, %d)\n%s.Position = UDim2.new(%f, %d, %f, %d)\n%s.Rotation = %f\n%s.Image = '%s'\n%s.BackgroundColor3 = Color3.fromRGB(%d, %d, %d)\n%s.BackgroundTransparency = %f\n%s.ZIndex = %d\n",
                varName, varName,
                element.Size.X.Scale, element.Size.X.Offset,
                element.Size.Y.Scale,                element.Size.Y.Offset,
                varName, posXScale, posXOffset, posYScale, posYOffset,
                varName, element.Rotation or 0,
                varName, element.Image,
                varName, math.floor(element.BackgroundColor3.R * 255), math.floor(element.BackgroundColor3.G * 255), math.floor(element.BackgroundColor3.B * 255),
                varName, element.BackgroundTransparency,
                varName, element.ZIndex
            )
            local uiCorner = element:FindFirstChild("UICorner")
            if uiCorner then
                scriptOutput = scriptOutput .. string.format(
                    "local UICorner = Instance.new('UICorner')\nUICorner.CornerRadius = UDim.new(%f, 0)\nUICorner.Parent = %s\n",
                    uiCorner.CornerRadius.Scale, varName
                )
            end
            local uiStroke = element:FindFirstChild("UIStroke")
            if uiStroke then
                scriptOutput = scriptOutput .. string.format(
                    "local UIStroke = Instance.new('UIStroke')\nUIStroke.Thickness = %d\nUIStroke.Color = Color3.fromRGB(%d, %d, %d)\nUIStroke.Parent = %s\n",
                    uiStroke.Thickness, math.floor(uiStroke.Color.R * 255), math.floor(uiStroke.Color.G * 255), math.floor(uiStroke.Color.B * 255), varName
                )
            end
            scriptOutput = scriptOutput .. string.format("%s.Parent = %s\n\n", varName, parentVarName)
        end
    end

    for _, element in pairs(createdElements) do
        if element.Parent == ScreenGui then
            generateElementCode(element, "ScreenGui")
        end
    end

    scriptOutput = scriptOutput .. "local function hideFrameAndChildren(frame)\n"
    scriptOutput = scriptOutput .. "    frame.Visible = false\n"
    scriptOutput = scriptOutput .. "    local frameChildren = {\n"
    for parentFrame, children in pairs(frameChildren) do
        if elementNames[parentFrame] then
            scriptOutput = scriptOutput .. string.format("        [%s] = {", elementNames[parentFrame])
            for i, childFrame in pairs(children) do
                if elementNames[childFrame] then
                    scriptOutput = scriptOutput .. (i > 1 and ", " or "") .. elementNames[childFrame]
                end
            end
            scriptOutput = scriptOutput .. "},\n"
        end
    end
    scriptOutput = scriptOutput .. "    }\n"
    scriptOutput = scriptOutput .. "    if frameChildren[frame] then\n"
    scriptOutput = scriptOutput .. "        for _, childFrame in pairs(frameChildren[frame]) do\n"
    scriptOutput = scriptOutput .. "            childFrame.Visible = false\n"
    scriptOutput = scriptOutput .. "        end\n"
    scriptOutput = scriptOutput .. "    end\n"
    scriptOutput = scriptOutput .. "end\n\n"

    for button, frame in pairs(buttonBindings) do
        if elementNames[button] and elementNames[frame] then
            scriptOutput = scriptOutput .. string.format(
                "%s.MouseButton1Click:Connect(function()\n    if %s.Visible then\n        hideFrameAndChildren(%s)\n    else\n        %s.Visible = true\n    end\n",
                elementNames[button], elementNames[frame], elementNames[frame], elementNames[frame]
            )
            local scriptCode = buttonScripts[button]
            if scriptCode and scriptCode ~= "Enter Lua Script Here" and scriptCode ~= "" then
                scriptOutput = scriptOutput .. "    " .. scriptCode .. "\n"
            end
            scriptOutput = scriptOutput .. "end)\n\n"
        end
    end

    for button, scriptCode in pairs(buttonScripts) do
        if (button:IsA("TextButton") or button:IsA("ImageButton")) and not buttonBindings[button] and scriptCode and scriptCode ~= "Enter Lua Script Here" and scriptCode ~= "" then
            scriptOutput = scriptOutput .. string.format(
                "%s.MouseButton1Click:Connect(function()\n    %s\nend)\n\n",
                elementNames[button], scriptCode
            )
        end
    end
    
    setclipboard(scriptOutput)
    CopyScript.Text = "Copied!"
    wait(1)
    CopyScript.Text = "Copy Script"
end)

-- Scrolling Toggle
ScrollingToggle.MouseButton1Click:Connect(function()
    if selectedElement and (selectedElement:IsA("Frame") or selectedElement:IsA("ScrollingFrame")) then
        local index = table.find(createdElements, selectedElement)
        if index then
            if selectedElement:IsA("Frame") then
                local newScrollingFrame = Instance.new("ScrollingFrame")
                newScrollingFrame.Size = selectedElement.Size
                newScrollingFrame.Position = selectedElement.Position
                newScrollingFrame.BackgroundColor3 = selectedElement.BackgroundColor3
                newScrollingFrame.BackgroundTransparency = selectedElement.BackgroundTransparency
                newScrollingFrame.ZIndex = selectedElement.ZIndex
                newScrollingFrame.Rotation = selectedElement.Rotation or 0
                newScrollingFrame.ScrollBarThickness = 8
                newScrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
                newScrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
                newScrollingFrame.Parent = selectedElement.Parent
                
                local uiCorner = selectedElement:FindFirstChild("UICorner")
                if uiCorner then
                    local newUICorner = Instance.new("UICorner")
                    newUICorner.CornerRadius = uiCorner.CornerRadius
                    newUICorner.Parent = newScrollingFrame
                end
                
                local uiStroke = selectedElement:FindFirstChild("UIStroke")
                if uiStroke then
                    local newUIStroke = Instance.new("UIStroke")
                    newUIStroke.Thickness = uiStroke.Thickness
                    newUIStroke.Color = uiStroke.Color
                    newUIStroke.Parent = newScrollingFrame
                end
                
                for _, child in pairs(selectedElement:GetChildren()) do
                    if not child:IsA("UICorner") and not child:IsA("UIStroke") then
                        child.Parent = newScrollingFrame
                    end
                end
                
                for button, boundFrame in pairs(buttonBindings) do
                    if boundFrame == selectedElement then
                        buttonBindings[button] = newScrollingFrame
                    end
                end
                if frameChildren[selectedElement] then
                    frameChildren[newScrollingFrame] = frameChildren[selectedElement]
                    frameChildren[selectedElement] = nil
                end
                
                selectedElement:Destroy()
                createdElements[index] = newScrollingFrame
                selectedElement = newScrollingFrame
                makeDraggable(newScrollingFrame)
                ScrollingToggle.Text = "Scrolling: On"
                
                newScrollingFrame.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                       input.UserInputType == Enum.UserInputType.Touch then
                        selectElement(newScrollingFrame)
                    end
                end)
            elseif selectedElement:IsA("ScrollingFrame") then
                local newFrame = Instance.new("Frame")
                newFrame.Size = selectedElement.Size
                newFrame.Position = selectedElement.Position
                newFrame.BackgroundColor3 = selectedElement.BackgroundColor3
                newFrame.BackgroundTransparency = selectedElement.BackgroundTransparency
                newFrame.ZIndex = selectedElement.ZIndex
                newFrame.Rotation = selectedElement.Rotation or 0
                newFrame.Parent = selectedElement.Parent
                
                local uiCorner = selectedElement:FindFirstChild("UICorner")
                if uiCorner then
                    local newUICorner = Instance.new("UICorner")
                    newUICorner.CornerRadius = uiCorner.CornerRadius
                    newUICorner.Parent = newFrame
                end
                
                local uiStroke = selectedElement:FindFirstChild("UIStroke")
                if uiStroke then
                    local newUIStroke = Instance.new("UIStroke")
                    newUIStroke.Thickness = uiStroke.Thickness
                    newUIStroke.Color = uiStroke.Color
                    newUIStroke.Parent = newFrame
                end
                
                for _, child in pairs(selectedElement:GetChildren()) do
                    if not child:IsA("UICorner") and not child:IsA("UIStroke") then
                        child.Parent = newFrame
                    end
                end
                
                for button, boundFrame in pairs(buttonBindings) do
                    if boundFrame == selectedElement then
                        buttonBindings[button] = newFrame
                    end
                end
                if frameChildren[selectedElement] then
                    frameChildren[newFrame] = frameChildren[selectedElement]
                    frameChildren[selectedElement] = nil
                end
                
                selectedElement:Destroy()
                createdElements[index] = newFrame
                selectedElement = newFrame
                makeDraggable(newFrame)
                ScrollingToggle.Text = "Scrolling: Off"
                
                newFrame.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                       input.UserInputType == Enum.UserInputType.Touch then
                        selectElement(newFrame)
                    end
                end)
            end
        end
    end
end)
